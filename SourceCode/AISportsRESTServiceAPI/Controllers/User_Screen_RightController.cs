/*****************************************************************************************************************
Author: Code generated by Shinersoft Code Plumber 2008.
Date: Monday, November 11, 2024
Time: 7:12:00 AM
TableName: User_Screen_Right
/*****************************************************************************************************************/
using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;
using System.Net;
using System.Net.Http;
using DomainLayer;
using DataLayer;
using Utility;
using POCO;
using System.Web.Http;
using System.Web.Http.Description;
using System.Diagnostics;
namespace WebAPI
{
    /// <summary>
    /// Summary description for User_Screen_RightService
    /// </summary>
    [Authorize]
    public class User_Screen_RightController : ApiController
    {
        private EventLog eventLog;
        private DomainContext objContext;
        public User_Screen_RightController()
        {
            eventLog = new EventLog("User_Screen_RightServiceLog", "localhost", "User_Screen_RightService");
        }
        [HttpGet]
        [Route("api/User_Screen_Right/GetUser_Screen_RightsByID/{ID}")]
        public POCO.User_Screen_Right GetUser_Screen_RightsByID(long ID)
        {
            POCO.User_Screen_Right items = new POCO.User_Screen_Right();
            objContext = new DomainContext(new DomainLayer.DomainClass());
            objContext.AddField(EntityMapper.User_Screen_Right.USERRIGHTSID, ID);
            IList responseList = objContext.Load(EntityMapper.Entities.USER_SCREEN_RIGHT, DomainMapper.GET_USER_SCREEN_RIGHT_BY_ID);
            if (responseList != null)
            { if (responseList.Count > 0) { items = responseList.Cast<POCO.User_Screen_Right>().ToList()[0]; } }
            return items;
        }
        [HttpGet]
        [Route("api/User_Screen_Right/GetUser_Screen_Rights")]
        [ResponseType(typeof(POCO.User_Screen_Right))]
        public POCO.User_Screen_Right GetUser_Screen_Rights()
        {
            POCO.User_Screen_Right items = new POCO.User_Screen_Right();
            objContext = new DomainContext(new DomainLayer.DomainClass());
            IList responseList = objContext.Load(EntityMapper.Entities.USER_SCREEN_RIGHT, DomainMapper.GET_USER_SCREEN_RIGHTS);
            if (responseList != null)
            { if (responseList.Count > 0) { items.lstUser_Screen_Right = responseList.Cast<POCO.User_Screen_Right>().ToList(); } }
            return items;
        }
        //[HttpGet]
        //[Route("api/User_Screen_Right/GetUser_Screen_RightsByLocationID/{ID}")]
        //[ResponseType(typeof(POCO.User_Screen_Right))]
        //public POCO.User_Screen_Right GetUser_Screen_RightsByLocationID(long ID)
        //{
        //    POCO.User_Screen_Right items = new POCO.User_Screen_Right();
        //    objContext = new DomainContext(new DomainLayer.DomainClass());
        //    objContext.AddField(EntityMapper.User_Screen_Right.LOCATION_ID, ID);
        //    IList responseList = objContext.Load(EntityMapper.Entities.USER_SCREEN_RIGHT, DomainMapper.GET_USER_SCREEN_RIGHT_BY_LOCATION_ID);
        //    if (responseList != null)
        //    { if (responseList.Count > 0) { items.lstUser_Screen_Right = responseList.Cast<POCO.User_Screen_Right>().ToList(); } }
        //    return items;
        //}
        [HttpPost]
        [Route("api/User_Screen_Right/AddUser_Screen_Right")]
        public long AddUser_Screen_Right(POCO.User_Screen_Right entity)
        {
            objContext = new DomainContext(new DomainLayer.DomainClass());
            try
            {
                objContext.AddField(EntityMapper.User_Screen_Right.USERGROUPID, entity.UserGroupId);
                objContext.AddField(EntityMapper.User_Screen_Right.SCREENID, entity.ScreenId);
                objContext.AddField(EntityMapper.User_Screen_Right.VIEWRIGHTS, entity.ViewRights);
                objContext.AddField(EntityMapper.User_Screen_Right.ADDRIGHTS, entity.AddRights);
                objContext.AddField(EntityMapper.User_Screen_Right.EDITRIGHTS, entity.EditRights);
                objContext.AddField(EntityMapper.User_Screen_Right.DELETERIGHTS, entity.DeleteRights);
                objContext.AddField(EntityMapper.User_Screen_Right.REPORTRIGHTS, entity.ReportRights);
                objContext.AddField(EntityMapper.User_Screen_Right.IS_ACTIVE, entity.Is_Active);
                objContext.AddField(EntityMapper.User_Screen_Right.CREATED_DATE, entity.Created_Date);
                objContext.AddField(EntityMapper.User_Screen_Right.CREATED_BY, entity.Created_By);
                objContext.AddField(EntityMapper.User_Screen_Right.MODIFIED_DATE, entity.Modified_Date);
                objContext.AddField(EntityMapper.User_Screen_Right.MODIFIED_BY, entity.Modified_By);
                objContext.AddField(EntityMapper.User_Screen_Right.AUDIT_ID, entity.Audit_Id);
                objContext.AddField(EntityMapper.User_Screen_Right.USER_IP, entity.User_IP);
                objContext.AddField(EntityMapper.User_Screen_Right.SITE_ID, entity.Site_Id);
                objContext.AddRecord(EntityMapper.Entities.USER_SCREEN_RIGHT);
                objContext.Submit();
                objContext.Insert(UseTransaction.NO);
                return objContext.BusinessObject.ConvertDomainClass().ID;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                objContext = null;
            }
        }
        [HttpPost]
        [Route("api/User_Screen_Right/UpdateUser_Screen_Right")]
        public long UpdateUser_Screen_Right(POCO.User_Screen_Right entity)
        {
            objContext = new DomainContext(new DomainLayer.DomainClass());
            try
            {
                objContext.AddField(EntityMapper.User_Screen_Right.USERRIGHTSID, entity.UserRightsId);
                objContext.AddField(EntityMapper.User_Screen_Right.USERGROUPID, entity.UserGroupId);
                objContext.AddField(EntityMapper.User_Screen_Right.SCREENID, entity.ScreenId);
                objContext.AddField(EntityMapper.User_Screen_Right.VIEWRIGHTS, entity.ViewRights);
                objContext.AddField(EntityMapper.User_Screen_Right.ADDRIGHTS, entity.AddRights);
                objContext.AddField(EntityMapper.User_Screen_Right.EDITRIGHTS, entity.EditRights);
                objContext.AddField(EntityMapper.User_Screen_Right.DELETERIGHTS, entity.DeleteRights);
                objContext.AddField(EntityMapper.User_Screen_Right.REPORTRIGHTS, entity.ReportRights);
                objContext.AddField(EntityMapper.User_Screen_Right.IS_ACTIVE, entity.Is_Active);
                objContext.AddField(EntityMapper.User_Screen_Right.CREATED_DATE, entity.Created_Date);
                objContext.AddField(EntityMapper.User_Screen_Right.CREATED_BY, entity.Created_By);
                objContext.AddField(EntityMapper.User_Screen_Right.MODIFIED_DATE, entity.Modified_Date);
                objContext.AddField(EntityMapper.User_Screen_Right.MODIFIED_BY, entity.Modified_By);
                objContext.AddField(EntityMapper.User_Screen_Right.AUDIT_ID, entity.Audit_Id);
                objContext.AddField(EntityMapper.User_Screen_Right.USER_IP, entity.User_IP);
                objContext.AddField(EntityMapper.User_Screen_Right.SITE_ID, entity.Site_Id);
                objContext.AddRecord(EntityMapper.Entities.USER_SCREEN_RIGHT);
                objContext.Submit();
                objContext.Update(UseTransaction.NO);
                return objContext.BusinessObject.ConvertDomainClass().ID;
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                objContext = null;
            }
        }
        [HttpPost]
        [Route("api/User_Screen_Right/DeleteUser_Screen_Right")]
        public void DeleteUser_Screen_Right(POCO.User_Screen_Right entity)
        {
            objContext = new DomainContext(new DomainLayer.DomainClass());
            try
            {
                objContext.AddField(EntityMapper.User_Screen_Right.USERRIGHTSID, entity.UserRightsId);
                objContext.Load(EntityMapper.Entities.USER_SCREEN_RIGHT, DomainMapper.GET_USER_SCREEN_RIGHT_BY_ID_DATA);
                objContext.AddDeleteEntity(objContext.BusinessObject.DataList[0].ConvertUser_Screen_Right());
                objContext.Delete(UseTransaction.NO);
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                objContext = null;
            }
        }
    }
}
/*****************************************************************************************************************/

